/*
 *	This file is part of Web-CAT Eclipse Plugins.
 *
 *	Web-CAT is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	Web-CAT is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with Web-CAT; if not, write to the Free Software
 *	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
package net.sf.webcat.eclipse.submitter.core;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

import org.eclipse.core.runtime.CoreException;
import org.eclipse.jface.operation.IRunnableContext;

/**
 * The interface implemented by the core submission engine. Clients use this to
 * parse the submission definitions file and perform project submissions.
 * 
 * This interface is not intended to be implemented by clients.
 * 
 * @author Tony Allevato (Virginia Tech Computer Science)
 */
public interface ISubmissionEngine
{
	// ------------------------------------------------------------------------
	/**
	 * Returns the submission target object that represents the root of the
	 * submission target tree.
	 * 
	 * @return An ITarget that represents the root of the submission target
	 *         tree.
	 */
	ITargetRoot getRoot();


	// ------------------------------------------------------------------------
	/**
	 * Connects to the assignment definition file and constructs the submission
	 * target tree from the definitions.
	 * 
	 * @param context
	 *            An IRunnableContext that is used to show the progress of
	 *            loading the definitions.
	 * 
	 * @throws IOException
	 *             if an I/O exception occurs during parsing.
	 * @throws SubmissionTargetException
	 *             if any syntactic/semantic errors are found in the submission
	 *             definitions file, or if another exception occurs.
	 */
	void openDefinitions(URL url, IRunnableContext context) throws IOException,
	        SubmissionTargetException;


	// ------------------------------------------------------------------------
	/**
	 * Constructs the submission target tree from the definitions in the given
	 * string.
	 * 
	 * @param context
	 *            An IRunnableContext that is used to show the progress of
	 *            loading the definitions.
	 * 
	 * @throws IOException
	 *             if an I/O exception occurs during parsing.
	 * @throws SubmissionTargetException
	 *             if any syntactic/semantic errors are found in the submission
	 *             definitions file, or if another exception occurs.
	 */
	void openDefinitions(String contents, IRunnableContext context)
	        throws IOException, SubmissionTargetException;


	// ------------------------------------------------------------------------
	/**
	 * Returns a value indicating whether the submission process generated a
	 * response that should be displayed to the user.
	 * 
	 * @return true if a response was generated; otherwise, false.
	 */
	boolean hasResponse();


	// ------------------------------------------------------------------------
	/**
	 * Returns the response, if any, generated by the submission process.
	 * 
	 * @return A String containing the response, or null if no response was
	 *         generated.
	 */
	String getSubmissionResponse();


	// ------------------------------------------------------------------------
	/**
	 * Electronically submits a project.
	 * 
	 * @param context
	 *            An IRunnableContext that is used to show the progress of
	 *            submitting the project.
	 * @param params
	 *            A SubmissionParameters object that describes the project to be
	 *            submitted.
	 * 
	 * @throws InterruptedException
	 *             if the submission process is canceled.
	 * @throws MalformedURLException
	 *             if the URL to which the project was to be submitted is
	 *             malformed.
	 * @throws IOException
	 *             if a general I/O exception occurs during submission.
	 * @throws CoreException
	 *             if an Eclipse core error occurs during submission.
	 * @throws RequiredFilesMissingException
	 *             if the project to be submitted did not contain all the
	 *             required files, as dictated by the submission definition.
	 */
	void submitProject(IRunnableContext context, SubmissionParameters params)
	        throws InterruptedException, MalformedURLException, IOException,
	        CoreException, RequiredFilesMissingException;
}
