<?xml version="1.0" encoding="utf-8" ?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:st="http://web-cat.cs.vt.edu/submissionTargets"
	targetNamespace="http://web-cat.cs.vt.edu/submissionTargets"
	version="1.0">
<!--
	<submission-targets>
	===
	The root element.  For now, it is identical to an <assignment-group>, but
	the distinction is kept for future possible revisions, so that global
	information may be added to the root element, if desired.
-->
	<element name="submission-targets">
		<complexType>
			<group ref="st:assignmentContainer" />
		</complexType>
	</element>
<!--
	<include>, <exclude>, <required>
	===
	Specify file patterns for particular types of files.  They all share a
	common attribute group - a single required "pattern" attribute, of type
	"string".
-->
	<element name="include">
		<complexType>
			<attributeGroup ref="st:fileElement" />
		</complexType>
	</element>
	<element name="exclude">
		<complexType>
			<attributeGroup ref="st:fileElement" />
		</complexType>
	</element>
	<element name="required">
		<complexType>
			<attributeGroup ref="st:fileElement" />
		</complexType>
	</element>
<!--
	<packager>
	===
	Contains a required attribute "id" which identifies the packager to use
	(should be registered as an extension in Eclipse), and also contains an
	optional sequence of <param> elements that are used to pass information
	to the packager.
-->
	<element name="packager">
		<complexType>
			<sequence>
				<element ref="st:param" minOccurs="0" maxOccurs="unbounded" />
			</sequence>
			<attribute name="id" type="string" use="required" />
		</complexType>
	</element>
<!--
	<transport>
	===
	Contains a required "uri" attribute which identifies the transport
	mechanism for the submission, as well as an optional sequence of
	<param> and <file-param> elements that are used to pass information to
	the transport mechanism.
-->
	<element name="transport">
		<complexType>
			<sequence>
				<choice minOccurs="0" maxOccurs="unbounded">
					<element ref="st:param" />
					<element ref="st:file-param" />
				</choice>
			</sequence>
			<attribute name="uri" type="anyURI" />
		</complexType>
	</element>
	<element name="param">
		<complexType>
			<attributeGroup ref="st:paramElement"/>
		</complexType>
	</element>
	<element name="file-param">
		<complexType>
			<attributeGroup ref="st:paramElement"/>
		</complexType>
	</element>
	<attributeGroup name="paramElement">
		<attribute name="name" type="string" use="required"/>
		<attribute name="value" type="string" use="required"/>
	</attributeGroup>
<!--
	<assignment-group>
	===
	An <assignment-group> can contain other assignment groups and assignments.
	The user-interface should display these as a "folder" or other container
	in a hiearchical structure.
	
	An assignment group has an optional name, a "hidden" attribute for
	user-interface purposes, and it can contain <include>, <exclude>,
	<required>, <packager>, and <transport> elements that override or
	supplement the settings in the parent node.
-->
	<element name="assignment-group">
		<complexType>
			<group ref="st:assignmentContainer" />
			<attribute name="name" use="optional"/>
			<attribute name="hidden" use="optional" default="false"/>
		</complexType>
	</element>
<!--
	<import-group>
	===
	An <import-group> is an assignment group that is contained in another
	XML file.  This other file is a full-fledged submission targets file
	with its own <submission-targets> root element - the definitions in
	that file are folded into a new group at the position of this
	element.
	
	Imported groups are delay-loaded - that is, the submission engine will
	not load the definitions at the specified URL until information about
	this group is queried, if at all.
	
	An imported group has a required name, a "hidden" attribute for
	user-interface purposes, and a "ref" attribute that contains the URL
	from with the definitions will be loaded.  An imported group element
	has no children of its own.
-->
	<element name="import-group">
		<complexType>
			<attribute name="name" use="required"/>
			<attribute name="hidden" use="optional" default="false"/>
			<attribute name="href" use="required" type="anyURI"/>
		</complexType>
	</element>
<!--
	<assignment>
	===
	Refers to a single assignment.  This element is similar to an assignment
	group, but it cannot contain other assignment groups or assignments.
	Additionally, the "name" attribute in an assignment is required.
-->
	<element name="assignment">
		<complexType>
			<sequence>
				<choice minOccurs="0" maxOccurs="unbounded">
					<element ref="st:include" minOccurs="0" />
					<element ref="st:exclude" minOccurs="0" />
					<element ref="st:required" minOccurs="0" />
				</choice>
				<element ref="st:packager" minOccurs="0" maxOccurs="1" />
				<element ref="st:transport" minOccurs="0" maxOccurs="1" />
			</sequence>
			<attribute name="name" use="required"/>
			<attribute name="hidden" use="optional" default="false"/>
		</complexType>
	</element>
<!--
	Attribute group: fileElement
	Used by: <include>, <exclude>, <required>
	===
	Contains a single required "pattern" attribute that specifies the
	DOS- or Unix-style file pattern used to match a file or files in the
	submission.
-->
	<attributeGroup name="fileElement">
		<attribute name="pattern" type="string" use="required" />
	</attributeGroup>
<!--
	Group: assignmentContainer
	Used by: <submission-targets>, <assignment-group>
	===
	Contains all the elements used to define an assignment group.
-->
	<group name="assignmentContainer">
		<sequence>
			<choice minOccurs="0" maxOccurs="unbounded">
				<element ref="st:include" minOccurs="0" />
				<element ref="st:exclude" minOccurs="0" />
				<element ref="st:required" minOccurs="0" />
			</choice>
			<element ref="st:packager" minOccurs="0" maxOccurs="1" />
			<element ref="st:transport" minOccurs="0" maxOccurs="1" />
			<choice minOccurs="0" maxOccurs="unbounded">
				<element ref="st:assignment"/>
				<element ref="st:assignment-group"/>
				<element ref="st:import-group"/>
			</choice>
		</sequence>
	</group>
</schema>